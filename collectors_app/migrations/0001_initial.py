# Generated by Django 3.0.5 on 2020-05-27 20:29

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='InstitutionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=100, verbose_name='Institution Type')),
                ('notes', models.TextField(blank=True, max_length=500)),
            ],
            options={
                'verbose_name': 'Institution Type',
                'verbose_name_plural': 'Institution Types',
                'ordering': ['type_name'],
            },
        ),
        migrations.CreateModel(
            name='PersonType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=100, verbose_name='Person Type')),
                ('notes', models.TextField(blank=True, default='', max_length=500)),
            ],
            options={
                'verbose_name': 'Person Type',
                'verbose_name_plural': 'Person Types',
                'ordering': ['type_name'],
            },
        ),
        migrations.CreateModel(
            name='Collector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inst_main_name', models.CharField(blank=True, help_text='If an institutional collection, provide main institution name.', max_length=255, verbose_name='Institution Main Name')),
                ('inst_sub_name', models.CharField(blank=True, help_text='If an institutional collection, provide name of department, division, etc., responsible for artist files.', max_length=255, verbose_name='Institution Secondary Name')),
                ('person_last_name', models.CharField(blank=True, help_text='If a personal collection, provide last name of collector.', max_length=255, verbose_name='Last Name')),
                ('person_first_name', models.CharField(blank=True, help_text='If a personal collection, provide first name of collector.', max_length=255, verbose_name='First Name')),
                ('email', models.EmailField(blank=True, help_text='Provide best email for answering questions about artist files. If an institution, prefer general email such as "library@cartermuseum.org"', max_length=255, verbose_name='Email')),
                ('telephone', models.CharField(help_text='Provide best telephone contact for answering questions about artist files.', max_length=50, verbose_name='Telephone')),
                ('website', models.URLField(blank=True, help_text='Provide website address related to institution or person responsible for artist files collection, for example, "www.cartermuseum.org/library"', max_length=255, verbose_name='Website')),
                ('instagram', models.CharField(blank=True, max_length=50, verbose_name='Instagram')),
                ('twitter', models.CharField(blank=True, max_length=50, verbose_name='Twitter')),
                ('date_created', models.DateField(auto_now_add=True)),
                ('date_saved', models.DateField(auto_now=True)),
                ('inst_type', models.ManyToManyField(help_text='Choose all types that are relevant. Create a new type if there is not a fit.', related_name='Collector', to='collectors_app.InstitutionType', verbose_name='Institution Types')),
                ('person_type', models.ManyToManyField(help_text='Choose all types that are relevant. Create new type if there is not a fit.', related_name='Collector', to='collectors_app.PersonType', verbose_name='Person Types')),
            ],
            options={
                'verbose_name': 'Collector',
                'verbose_name_plural': 'Collectors',
                'ordering': ['inst_main_name'],
            },
        ),
    ]
