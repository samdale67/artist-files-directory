# Generated by Django 3.0.5 on 2020-05-21 21:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('collections_app', '0046_auto_20200521_2016'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='collection',
            name='services',
        ),
        migrations.AddField(
            model_name='collection',
            name='service',
            field=models.ManyToManyField(help_text='Add reference services offered. Create a new service if there is not a fit.', related_name='collections', to='collections_app.CollectionService', verbose_name='Reference Services'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='cat_system',
            field=models.ManyToManyField(help_text='Add systems used for cataloging artist files collection. Create a new system if there is not a fit.', related_name='collections', to='collections_app.CollectionCatSystem', verbose_name='Cataloging Systems'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='image',
            field=models.ForeignKey(blank=True, help_text='Upload images showing example material from files and/or storage systems in use.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='collections_app.CollectionImage', verbose_name='Collection Images'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='spec_format',
            field=models.ManyToManyField(blank=True, help_text='Add special formats contained in the collection, either analog or digital. Create a new type if there is not a fit.', related_name='collections', to='collections_app.CollectionSpecialFormat', verbose_name='Special Formats'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='subject_city',
            field=models.ManyToManyField(blank=True, help_text='Add cities that are subject focuses of the files', related_name='collections', to='collections_app.CollectionSubjectCity', verbose_name='Subject: Cities'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='subject_country',
            field=models.ManyToManyField(blank=True, help_text='Add countries that are subject focuses of the files.', related_name='collections', to='collections_app.CollectionSubjectCountry', verbose_name='Subject: Countries'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='subject_county',
            field=models.ManyToManyField(blank=True, help_text='Add counties that are subject focuses of the files.', related_name='collections', to='collections_app.CollectionSubjectCounty', verbose_name='Subject: Counties'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='subject_geo_area',
            field=models.ManyToManyField(blank=True, help_text='Add geographic areas, such as "West U.S." that are subject focuses of the files.', related_name='collections', to='collections_app.CollectionSubjectGeoArea', verbose_name='Subject: Geographic Areas'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='subject_name',
            field=models.ManyToManyField(blank=True, help_text='Add personal and institutional names that are subjects of the collection.', related_name='collections', to='collections_app.CollectionSubjectName', verbose_name='Subject: Names'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='subject_state_prov',
            field=models.ManyToManyField(blank=True, help_text='Add states or provinces that are subject focuses of the files.', related_name='collections', to='collections_app.CollectionSubjectStateProv', verbose_name='Subject: States and Provinces'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='subject_topic',
            field=models.ManyToManyField(blank=True, help_text='Add topical terms that are the subject focuses of the files.', related_name='collections', to='collections_app.CollectionSubjectTopic', verbose_name='Subject: Topics'),
        ),
    ]
